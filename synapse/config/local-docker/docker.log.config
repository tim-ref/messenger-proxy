 # Copyright (C) 2023 akquinet GmbH

 # Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.

# Log configuration for Synapse.
#
# This is a YAML file containing a standard Python logging configuration
# dictionary. See [1] for details on the valid settings.
#
# Synapse also supports structured logging for machine readable logs which can
# be ingested by ELK stacks. See [2] for details.
#
# [1]: https://docs.python.org/3.7/library/logging.config.html#configuration-dictionary-schema
# [2]: https://matrix-org.github.io/synapse/latest/structured_logging.html

version: 1
formatters:
  precise:
    format: '%(asctime)s - %(name)s - %(lineno)d - %(levelname)s - %(request)s- %(message)s'

handlers:
  # A handler that writes logs to stderr. Unused by default, but can be used
  # instead of "buffer" and "file" in the logger handlers.
  console:
    class: logging.StreamHandler
    formatter: precise

loggers:
  synapse:
    level: INFO
  synapse.storage.SQL:
    # beware: increasing this to DEBUG will make synapse log sensitive
    # information such as access tokens.
    level: INFO

root:
  level: INFO
  # Write logs to the `buffer` handler, which will buffer them together in memory,
  # then write them to a file.
  #
  # Replace "buffer" with "console" to log to stderr instead.
  handlers: [console]


