<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2023 - 2025 akquinet GmbH
  ~
  ~  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>de.akquinet.timref.fachdienst.messenger-proxy</groupId>
    <artifactId>mp-backend</artifactId>
    <version>0.6.1</version>

    <name>Messenger-Proxy</name>
    <description>Messenger-Proxy f√ºr die TIM Referenzimplementierung</description>
    <url>https://www.github.com/tim-ref/messenger-proxy</url>
    <inceptionYear>2023</inceptionYear>

    <licenses>
        <license>
            <name>Apache-2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>manual</distribution>
            <!-- <comments></comments> -->
        </license>
    </licenses>

    <organization>
        <name>akquinet GmbH</name>
        <url>https://www.akquinet.de</url>
    </organization>


    <properties>
        <java.version>21</java.version>

        <kotlin.version>1.9.23</kotlin.version>
        <kotlinx-coroutines.version>1.8.0</kotlinx-coroutines.version>
        <kotlinx-datetime.version>0.5.0</kotlinx-datetime.version>
        <kotlin-logging.version>3.0.5</kotlin-logging.version>

        <kotlin.compiler.jvmTarget>${java.version}</kotlin.compiler.jvmTarget>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <sonar.qualitygate.wait>true</sonar.qualitygate.wait>

        <trixnity.version>4.7.3</trixnity.version>
        <ktor.version>2.3.10</ktor.version>
        <hoplite.version>2.7.5</hoplite.version>
        <koin.version>3.5.4</koin.version>
        <okio.version>3.9.0</okio.version>
        <nimbus-jose-jwt.version>9.37.3</nimbus-jose-jwt.version>
        <bouncycastle.version>1.70</bouncycastle.version>
        <exposed.version>0.49.0</exposed.version>
        <flyway.version>9.22.3</flyway.version>
        <postgresql.version>42.7.3</postgresql.version>
        <logback.version>1.5.6</logback.version>
        <byte-buddy.version>1.14.10</byte-buddy.version>

        <kotest.version>5.8.1</kotest.version>
        <mockk.version>1.13.10</mockk.version>
        <zonky.version>2.0.6</zonky.version>

        <sonar.sources>src/main/kotlin</sonar.sources>
        <sonar.tests>src/test/kotlin</sonar.tests>
        <sonar.qualitygate.wait>true</sonar.qualitygate.wait>
        <sonar.junit.reportPaths>target/test-results/test</sonar.junit.reportPaths>
        <sonar.jacoco.reportPaths>target/reports/jacoco/test</sonar.jacoco.reportPaths>

        <junit.version>5.10.2</junit.version>
        <kotlinx-serialization.version>1.6.1</kotlinx-serialization.version>

        <main.class>de.akquinet.tim.proxy.MainKt</main.class>
        <defaultLogLevel>DEBUG</defaultLogLevel>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-bom</artifactId>
                <version>${ktor.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-maven-plugin</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>net.folivo</groupId>
            <artifactId>trixnity-api-server-jvm</artifactId>
            <version>${trixnity.version}</version>
        </dependency>
        <dependency>
            <groupId>net.folivo</groupId>
            <artifactId>trixnity-api-client-jvm</artifactId>
            <version>${trixnity.version}</version>
        </dependency>
        <dependency>
            <groupId>net.folivo</groupId>
            <artifactId>trixnity-serverserverapi-model-jvm</artifactId>
            <version>${trixnity.version}</version>
        </dependency>
        <dependency>
            <groupId>net.folivo</groupId>
            <artifactId>trixnity-clientserverapi-server-jvm</artifactId>
            <version>${trixnity.version}</version>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-server-netty-jvm</artifactId>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-server-auth-jvm</artifactId>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-client-okhttp-jvm</artifactId>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-client-logging-jvm</artifactId>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-serialization-kotlinx-json-jvm</artifactId>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-server-resources-jvm</artifactId>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-client-content-negotiation-jvm</artifactId>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-server-content-negotiation-jvm</artifactId>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-server-cors-jvm</artifactId>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-server-status-pages-jvm</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sksamuel.hoplite</groupId>
            <artifactId>hoplite-core</artifactId>
            <version>${hoplite.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sksamuel.hoplite</groupId>
            <artifactId>hoplite-yaml</artifactId>
            <version>${hoplite.version}</version>
        </dependency>
        <dependency>
            <groupId>io.insert-koin</groupId>
            <artifactId>koin-core-jvm</artifactId>
            <version>${koin.version}</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.okio</groupId>
            <artifactId>okio-jvm</artifactId>
            <version>${okio.version}</version>
        </dependency>
        <dependency>
            <groupId>com.nimbusds</groupId>
            <artifactId>nimbus-jose-jwt</artifactId>
            <version>${nimbus-jose-jwt.version}</version>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcpkix-jdk15on</artifactId>
            <version>${bouncycastle.version}</version>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>
            <version>${bouncycastle.version}</version>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bctls-jdk15on</artifactId>
            <version>${bouncycastle.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.exposed</groupId>
            <artifactId>exposed-core</artifactId>
            <version>${exposed.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.exposed</groupId>
            <artifactId>exposed-dao</artifactId>
            <version>${exposed.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.exposed</groupId>
            <artifactId>exposed-jdbc</artifactId>
            <version>${exposed.version}</version>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
            <version>${flyway.version}</version>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-coroutines-core</artifactId>
            <version>${kotlinx-coroutines.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlinx</groupId>
            <artifactId>kotlinx-datetime-jvm</artifactId>
            <version>${kotlinx-datetime.version}</version>
        </dependency>

        <dependency>
            <groupId>io.github.microutils</groupId>
            <artifactId>kotlin-logging-jvm</artifactId>
            <version>${kotlin-logging.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>2.0.13</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>com.vdurmont</groupId>
            <artifactId>emoji-java</artifactId>
            <version>5.1.1</version>
        </dependency>

        <!-- test dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test-junit5</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>net.folivo</groupId>
            <artifactId>trixnity-client-jvm</artifactId>
            <version>${trixnity.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.kotest</groupId>
            <artifactId>kotest-runner-junit5-jvm</artifactId>
            <version>${kotest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.kotest</groupId>
            <artifactId>kotest-assertions-core-jvm</artifactId>
            <version>${kotest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.kotest</groupId>
            <artifactId>kotest-assertions-json-jvm</artifactId>
            <version>${kotest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.kotest.extensions</groupId>
            <artifactId>kotest-assertions-ktor-jvm</artifactId>
            <version>2.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.kotest</groupId>
            <artifactId>kotest-extensions-junitxml-jvm</artifactId>
            <version>${kotest.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-client-mock-jvm</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-server-test-host-jvm</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- check if this dependency is still needed after updating to ktor 3 -->
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>${byte-buddy.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-server-call-logging-jvm</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.mockk</groupId>
            <artifactId>mockk-jvm</artifactId>
            <version>${mockk.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.squareup.okio</groupId>
            <artifactId>okio-fakefilesystem</artifactId>
            <version>${okio.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.zonky.test</groupId>
            <artifactId>embedded-postgres</artifactId>
            <version>${zonky.version}</version>
            <scope>test</scope>
        </dependency>

        <!--  required for zonky tests to be run in ARM base machines -->
        <dependency>
            <groupId>io.zonky.test.postgres</groupId>
            <artifactId>embedded-postgres-binaries-darwin-arm64v8</artifactId>
            <version>16.1.1</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>src/main/resources-filtered</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.openapitools</groupId>
                    <artifactId>openapi-generator-maven-plugin</artifactId>
                    <version>7.10.0</version>
                </plugin>
                <plugin>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <version>${kotlin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.2.5</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>3.1.2</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>0.8.11</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.5.0</version>
                </plugin>
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>4.3</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>2.4.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.6.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>3.0.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.4.1</version>
                    <!-- Built-In rules can be found here: https://maven.apache.org/enforcer/enforcer-rules/index.html -->
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!-- openapi-generator-maven-plugin -->
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <executions>
                   <execution>
                        <id>generate-gematik-contactManagement-models</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <generatorName>kotlin</generatorName>
                            <library>jvm-okhttp4</library>
                            <inputSpec>${project.basedir}/src/main/resources/static/openapi-gematik-contactManagement.yaml</inputSpec>
                            <modelPackage>de.akquinet.tim.fachdienst.messengerproxy.gematik.model.contactmanagement</modelPackage>
                            <skipValidateSpec>true</skipValidateSpec>
                            <generateSupportingFiles>false</generateSupportingFiles>
                            <generateApis>false</generateApis>
                            <generateModels>true</generateModels>
                            <configOptions>
                                <enumPropertyNaming>UPPERCASE</enumPropertyNaming>
                                <serializationLibrary>kotlinx_serialization</serializationLibrary>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- kotlin-maven-plugin -->
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <configuration>
                    <jvmTarget>${java.version}</jvmTarget>
                    <args>
                        <arg>-opt-in=kotlin.RequiresOptIn</arg>
                        <arg>-Xjsr305=strict</arg>
                    </args>
                    <compilerPlugins>
                        <plugin>jpa</plugin>
                        <plugin>all-open</plugin>
                        <plugin>kotlinx-serialization</plugin>
                    </compilerPlugins>
                    <sourceDirs>
                        <sourceDir>target/generated-sources/openapi/src/main/kotlin</sourceDir>
                        <sourceDir>src/main/kotlin</sourceDir>
                    </sourceDirs>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-allopen</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-noarg</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.jetbrains.kotlin</groupId>
                        <artifactId>kotlin-maven-serialization</artifactId>
                        <version>${kotlin.version}</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>target/generated-sources/openapi/src/main/kotlin</sourceDir>
                                <sourceDir>src/main/kotlin</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                        <configuration>
                            <sourceDirs>
                                <sourceDir>src/test/kotlin</sourceDir>
                            </sourceDirs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- maven-surefire-plugin  -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/*IT.*</exclude>
                    </excludes>
                    <forkCount>1</forkCount>
                    <argLine>${surefireArgLine}</argLine>
                </configuration>
            </plugin>

            <!-- maven-failsafe-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <id>integration-tests</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <skipITs>${skipTests}</skipITs>
                            <includes>
                                <include>**/*IT.*</include>
                            </includes>
                            <reuseForks>true</reuseForks>
                            <argLine>${failsafeArgLine}</argLine>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- jacoco-maven-plugin -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/rawdata/model/*</exclude>
                        <exclude>**/client/model/route/*</exclude>
                        <exclude>**/ProxyConfiguration*</exclude>
                        <exclude>**/Test*</exclude>
                        <exclude>**/IT*</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-unit-tests</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-ut.exec</destFile>
                            <propertyName>surefireArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-unit-test</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-ut.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>prepare-integration-tests</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                        <configuration>
                            <destFile>${project.build.directory}/jacoco-it.exec</destFile>
                            <propertyName>failsafeArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>merge-results</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>merge</goal>
                        </goals>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}</directory>
                                    <includes>
                                        <include>*.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                            <destFile>${project.build.directory}/jacoco.exec</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-merge-report</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                            <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <haltOnFailure>false</haltOnFailure>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <excludes>
                                        <exclude>**/*Test.*</exclude>
                                        <exclude>**/*IT.*</exclude>
                                    </excludes>
                                    <limits>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.60</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                            <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- maven-assembly-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <!-- as documented here: https://ktor.io/docs/maven-assembly-plugin.html#configure-plugin -->
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>${main.class}</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>create-jar-with-dependencies-package</id>
                        <phase>install</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- maven-release-plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <releaseProfiles>release</releaseProfiles>
                    <!-- It is assumed that the CI executes a test job which must succeed prior to the release plugin invocation -->
                    <arguments>-DskipTests=true</arguments>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>kubernetes</id>
            <activation>
                <property>
                    <name>env.LOG_LEVEL</name>
                </property>
            </activation>
            <properties>
                <defaultLogLevel>${env.LOG_LEVEL}</defaultLogLevel>
            </properties>
        </profile>
        <profile>
            <id>release</id>
            <properties>
                <activeProfile /> <!-- run tests with default profile -->
            </properties>
            <build>
                <plugins>
                    <!-- maven-assembly-plugin -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptors>
                                <descriptor>assembly/assembly.xml</descriptor>
                            </descriptors>
                        </configuration>
                        <executions>
                            <execution>
                                <id>assemble</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>license-checks</id>
            <activation>
                <property>
                    <name>!someVariableThatIsNotSet</name> <!-- resolves to always true -->
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- maven-enforcer-plugin -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>enforce-license-file-presence-and-content</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireFilesExist>
                                            <files>
                                                <file>${project.basedir}/LICENSE.txt</file>
                                            </files>
                                            <message>A file LICENSE.txt is required in this project's base directory.
                                            </message>
                                        </requireFilesExist>
                                        <requireFileChecksum>
                                            <file>${project.basedir}/LICENSE.txt</file>
                                            <checksum>3b83ef96387f14655fc854ddc3c6bd57</checksum>
                                            <type>md5</type>
                                            <message>The file LICENSE.txt must contain the content of
                                                https://www.apache.org/licenses/LICENSE-2.0.txt.
                                            </message>
                                        </requireFileChecksum>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                            <execution>
                                <id>enforce-no-snapshots</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <configuration>
                                    <rules>
                                        <requireReleaseDeps>
                                            <message>No SNAPSHOT versions are allowed.</message>
                                        </requireReleaseDeps>
                                    </rules>
                                    <fail>true</fail>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>get-current-year</id>
                                <goals>
                                    <goal>timestamp-property</goal>
                                </goals>
                                <phase>validate</phase>
                                <configuration>
                                    <name>current.year</name>
                                    <pattern>yyyy</pattern>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- license-maven-plugin -->
                    <plugin>
                        <groupId>com.mycila</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>update-and-check-files-license-header</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>format</goal>
                                    <goal>check</goal>
                                </goals>
                                <configuration>
                                    <properties>
                                        <owner>${project.organization.name}</owner>
                                        <email>${project.organization.url}</email>
                                        <year>${project.inceptionYear} - ${current.year}</year>
                                    </properties>
                                    <licenseSets>
                                        <licenseSet>
                                            <header>com/mycila/maven/plugin/license/templates/APACHE-2.txt</header>
                                            <includes>
                                                <include>src/**/*</include>
                                                <include>**/Dockerfile</include>
                                                <include>**/docker-compose.yml</include>
                                                <include>**/*.kt</include>
                                            </includes>
                                            <excludes>
                                                <exclude>**/*.sql</exclude>
                                                <exclude>**/*.crt</exclude>
                                                <exclude>**/*.key</exclude>
                                            </excludes>
                                        </licenseSet>
                                    </licenseSets>
                                    <mapping>
                                        <Dockerfile>SCRIPT_STYLE</Dockerfile>
                                    </mapping>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>create-license-report</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>third-party-report</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <!-- maven deploy information -->
    <repositories>
        <repository>
            <id>timref-maven</id>
            <url>${env.CI_PACKAGE_REGISTRY_URL}</url>
        </repository>
    </repositories>
    <distributionManagement>
        <repository>
            <id>timref-maven</id>
            <url>${env.CI_PACKAGE_REGISTRY_URL}</url>
        </repository>
        <snapshotRepository>
            <id>timref-maven</id>
            <url>${env.CI_PACKAGE_REGISTRY_URL}</url>
        </snapshotRepository>
    </distributionManagement>

    <!-- maven release information -->
    <scm>
        <connection>${env.CI_SCM_CONNECTION}</connection>
        <developerConnection>${env.CI_SCM_DEVELOPER_CONNECTION}</developerConnection>
        <tag>0.6.1</tag>
        <url>${env.CI_SCM_URL}</url>
    </scm>
</project>
